{
  "name": "speakeasy-nlp",
  "description": "A simple natural language processor for node javascript.",
  "homepage": "http://www.github.com/natehunzaker/speakeasy",
  "keywords": [
    "natural language"
  ],
  "author": {
    "name": "Nate Hunzaker",
    "email": "nate.hunzaker@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/natehunzaker/speakeasy.git"
  },
  "main": "index.js",
  "version": "0.2.2",
  "dependencies": {
    "levenshtein": "*"
  },
  "readme": "# SpeakEasy\n## Simple Natural Language Processing\n\n---\n`npm install speakeasy-nlp`\n\n---\n\n###Current commands:\n\n1. `*.classify` : Roughly determines the action, subject, and owner (posessive object) of a sentence\n2. `*.sentiment`: A collection of methods to approximate the positive/negative affect of a statement (relative to the whole statement)\n3. `*.closest`  : Uses levenshtein distance to find the best match for a word given an array\n\n---\n\n``` javascript\n\nvar speak = require(\"./speakeasy-nlp\");\n\n// Analyze sentences at a basic level\n// ------------------------------------- //\nspeak.classify(\"What is your name?\")             //=> { action: \"what\", owner: \"listener\", subject: \"name\" }\nspeak.classify(\"Do you know what time it is?\")   //=> { action: \"what\", owner: \"it\", subject: \"time\" }\n\n// Sentiment analysis\n// ------------------------------------- //\nspeak.sentiment.negativity(\"I hate your guts\")   //=> { score: 1, words: [hate] }\nspeak.sentiment.positivity(\"I love you\")         //=> { score: 1, words: [love] }\n\nsentiment.analyze(\"I love you, but you smell something aweful\")  \n// (Negative scores dictate a stronger influence of negative words)\n//=> { score: -1, positive: { ... }, negative: { ... } }\n\n// Closest word\n// ------------------------------------- //\nspeak.closest(\"node\", [\"foo\", \"nodejs\", \"baz\"])     //=> \"nodejs\"\n\n```\n\n\n## Philosophy\n\nThe goal of this project is not to be the next final solution for natural language processing. There are plenty of \n[other projects](http://www.nltk.org/) that do a significantly better job of this. SpeakEasy spawned out of another\nof my projects, [Nodebot](http://www.github.com/nhunzaker/nodebot), as a method of processing user input to simulate the illusion\nof intelligence.\n\nSpeakEasy's goal is to provide a library for NodeJS to perform simple language processing actions that perform well for \n70%-80% of all cases.",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/natehunzaker/speakeasy/issues"
  },
  "_id": "speakeasy-nlp@0.2.2",
  "dist": {
    "shasum": "92e6e82e1eec5d5edf2d1991cf793d49aca869d9"
  },
  "_from": "speakeasy-nlp@",
  "_resolved": "http://registry.npmjs.org/speakeasy-nlp/-/speakeasy-nlp-0.2.2.tgz"
}
